name: Deploy Services

on:
  workflow_run:
    workflows: ["Create Resources"]
    types:
      - completedS

env:
  AZURE_FUNCTIONAPP_NAME: 'prpsiot-prod-fa'   # enter your prefix here
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'raspberrypi_function'     
  PYTHON_VERSION: '3.9'                                   

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add --name azure-iot
          prefix="prps"
          az iot hub device-identity create --device-id myPi --hub-name $prefix'iot-prod-iothub'
          az functionapp config appsettings set --name $prefix'iot-prod-fa' --resource-group $prefix'iot-prod-rg' --settings ConnectionString=$(az iot hub connection-string show -n $prefix'iot-prod-iothub' --default-eventhub --output tsv)
          az functionapp config appsettings set --name $prefix'iot-prod-fa' --resource-group $prefix'iot-prod-rg' --settings DeviceConnectionString=$(az iot hub connection-string show -n $prefix'iot-prod-iothub' --output tsv)
          az functionapp config appsettings set --name $prefix'iot-prod-fa' --resource-group $prefix'iot-prod-rg' --settings AzureMLurl=${{ secrets.AZURE_ML_MODEL_URL }}
          az functionapp config appsettings set --name $prefix'iot-prod-fa' --resource-group $prefix'iot-prod-rg' --settings AzureMLkey=${{ secrets.AZURE_ML_MODEL_KEY }}


    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        scm-do-build-during-deployment: true
        enable-oryx-build: true